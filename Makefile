dev.setup:
	pip install requirement.txt
	pre-commit install

up:
	docker-compose up -d 

build:
	docker-compose build

stop:
	docker-compose stop

pull:
	docker pull pulumi/pulumi-python 
	docker-compose build

preview.databases:
	pulumi preview -C educate_infrastructure/databases

preview.educate:
	pulumi preview -C educate_infrastructure/applications/educate

preview.networking:
	pulumi preview -C educate_infrastructure/infra/network
	#docker run --rm -ti -v ~/.pulumi:/root/.pulumi -v $(pwd):/pulumi/projects diceytech/pulumi cd networking && pulumi preview --stack prod -C educate_infrastructure/applications/educate

up.databases:
	pulumi up -C educate_infrastructure/databases -y

up.educate:
	pulumi up -C educate_infrastructure/applications/educate -y

up.networking:
	pulumi up -C educate_infrastructure/infra/network -y

destroy.all:
	make destroy.educate destroy.databases destroy.networking

destroy.databases:
	pulumi destroy -C educate_infrastructure/databases -y

destroy.educate:
	pulumi destroy -C educate_infrastructure/applications/educate -y

destroy.networking:
	pulumi destroy -C educate_infrastructure/infra/network -y

test: # TODO change it to run in the container
	python -m pytest --disable-pytest-warnings

clean: ## remove generated byte code and build artifacts
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '__pycache__' -exec rm -rf {}

requirements:
	pip install -r requirements.txt
# python -m pytest --disable-pytest-warnings

isort:
	isort .